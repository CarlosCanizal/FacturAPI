// Generated by CoffeeScript 1.6.3
var APP_ID, JAVASCRIPT_KEY, Parse, fs, _;

Parse = require("parse").Parse;

_ = require("underscore");

fs = require('fs');

APP_ID = "8u01LExvSvGBmyrVoxD2n3Z9uq7jkNFbQD0AO3oz";

JAVASCRIPT_KEY = "oXkyLu63EtXE3sc38OHjk87NUgTkOWpLHEUHFmwF";

Parse.initialize(APP_ID, JAVASCRIPT_KEY);

module.exports = {
  signUp: function(username, email, password, callback) {
    var user;
    user = new Parse.User();
    return user.signUp({
      email: email,
      username: username,
      password: password
    }, {
      success: function(user) {
        return callback({
          code: 200,
          status: true,
          user: user
        });
      },
      error: function(model, error) {
        return callback({
          code: 400,
          status: false,
          error: error.message
        });
      }
    });
  },
  logIn: function(username, password, callback) {
    return Parse.User.logIn(username, password, {
      success: function(user) {
        return callback({
          code: 200,
          status: true,
          user: user
        });
      },
      error: function(user, error) {
        return callback({
          code: 400,
          status: false,
          error: error.message
        });
      }
    });
  },
  newCompany: function(user, name, callback) {
    var Company, company;
    Company = Parse.Object.extend("Company");
    company = new Company();
    return company.save({
      userId: user,
      name: name
    }, {
      success: function(object) {
        return callback({
          code: 200,
          status: true,
          company: company
        });
      },
      error: function(model, error) {
        return callback({
          code: 400,
          status: false,
          error: error.message
        });
      }
    });
  },
  certificate: function(certificate, companyId, callback) {
    var Company, base64, file, query;
    base64 = fs.readFileSync(certificate).toString('base64');
    file = new Parse.File("certificate.pem", {
      base64: base64
    });
    Company = Parse.Object.extend("Company");
    query = new Parse.Query(Company);
    return query.get(companyId, {
      success: function(company) {
        company.set('certificate', file);
        return company.save(null, {
          success: function(company) {
            return callback({
              code: 200,
              status: true
            });
          },
          error: function(object, error) {
            return callback({
              code: 400,
              status: false,
              error: error.message
            });
          }
        });
      },
      error: function(object, error) {
        return callback({
          code: 400,
          status: false,
          error: error.message
        });
      }
    });
  },
  currentUser: function() {
    return Parse.User.current();
  }
};
